//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoreServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/ComputerStoreService")]
    public partial class Item : object
    {
        
        private int ItemAuthorField;
        
        private string ItemDescriptionField;
        
        private int ItemIdField;
        
        private string ItemNameField;
        
        private int ItemPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemAuthor
        {
            get
            {
                return this.ItemAuthorField;
            }
            set
            {
                this.ItemAuthorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription
        {
            get
            {
                return this.ItemDescriptionField;
            }
            set
            {
                this.ItemDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId
        {
            get
            {
                return this.ItemIdField;
            }
            set
            {
                this.ItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName
        {
            get
            {
                return this.ItemNameField;
            }
            set
            {
                this.ItemNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemPrice
        {
            get
            {
                return this.ItemPriceField;
            }
            set
            {
                this.ItemPriceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/ComputerStoreService.Data")]
    public partial class Item1 : object
    {
        
        private int AuthorIdField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private int PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId
        {
            get
            {
                return this.AuthorIdField;
            }
            set
            {
                this.AuthorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StoreServiceReference.IStoreService")]
    public interface IStoreService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Registration", ReplyAction="http://tempuri.org/IStoreService/RegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.NullReferenceException), Action="http://tempuri.org/IStoreService/RegistrationNullReferenceExceptionFault", Name="NullReferenceException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Registration(string name, string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Registration", ReplyAction="http://tempuri.org/IStoreService/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(string name, string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        int Login(string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetItemByName", ReplyAction="http://tempuri.org/IStoreService/GetItemByNameResponse")]
        StoreServiceReference.Item GetItemByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetItemByName", ReplyAction="http://tempuri.org/IStoreService/GetItemByNameResponse")]
        System.Threading.Tasks.Task<StoreServiceReference.Item> GetItemByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/RemoveItemById", ReplyAction="http://tempuri.org/IStoreService/RemoveItemByIdResponse")]
        void RemoveItemById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/RemoveItemById", ReplyAction="http://tempuri.org/IStoreService/RemoveItemByIdResponse")]
        System.Threading.Tasks.Task RemoveItemByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddItem", ReplyAction="http://tempuri.org/IStoreService/AddItemResponse")]
        void AddItem(string name, int price, string description, int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddItem", ReplyAction="http://tempuri.org/IStoreService/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(string name, int price, string description, int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllItems", ReplyAction="http://tempuri.org/IStoreService/GetAllItemsResponse")]
        StoreServiceReference.Item1[] GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetAllItems", ReplyAction="http://tempuri.org/IStoreService/GetAllItemsResponse")]
        System.Threading.Tasks.Task<StoreServiceReference.Item1[]> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetItmesLike", ReplyAction="http://tempuri.org/IStoreService/GetItmesLikeResponse")]
        StoreServiceReference.Item1[] GetItmesLike(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetItmesLike", ReplyAction="http://tempuri.org/IStoreService/GetItmesLikeResponse")]
        System.Threading.Tasks.Task<StoreServiceReference.Item1[]> GetItmesLikeAsync(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IStoreServiceChannel : StoreServiceReference.IStoreService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class StoreServiceClient : System.ServiceModel.ClientBase<StoreServiceReference.IStoreService>, StoreServiceReference.IStoreService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public StoreServiceClient() : 
                base(StoreServiceClient.GetDefaultBinding(), StoreServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IStoreService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public StoreServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(StoreServiceClient.GetBindingForEndpoint(endpointConfiguration), StoreServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public StoreServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(StoreServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public StoreServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(StoreServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool Registration(string name, string email, string pass)
        {
            return base.Channel.Registration(name, email, pass);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(string name, string email, string pass)
        {
            return base.Channel.RegistrationAsync(name, email, pass);
        }
        
        public int Login(string email, string pass)
        {
            return base.Channel.Login(email, pass);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string pass)
        {
            return base.Channel.LoginAsync(email, pass);
        }
        
        public StoreServiceReference.Item GetItemByName(string name)
        {
            return base.Channel.GetItemByName(name);
        }
        
        public System.Threading.Tasks.Task<StoreServiceReference.Item> GetItemByNameAsync(string name)
        {
            return base.Channel.GetItemByNameAsync(name);
        }
        
        public void RemoveItemById(int id)
        {
            base.Channel.RemoveItemById(id);
        }
        
        public System.Threading.Tasks.Task RemoveItemByIdAsync(int id)
        {
            return base.Channel.RemoveItemByIdAsync(id);
        }
        
        public void AddItem(string name, int price, string description, int authorId)
        {
            base.Channel.AddItem(name, price, description, authorId);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(string name, int price, string description, int authorId)
        {
            return base.Channel.AddItemAsync(name, price, description, authorId);
        }
        
        public StoreServiceReference.Item1[] GetAllItems()
        {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<StoreServiceReference.Item1[]> GetAllItemsAsync()
        {
            return base.Channel.GetAllItemsAsync();
        }
        
        public StoreServiceReference.Item1[] GetItmesLike(string str)
        {
            return base.Channel.GetItmesLike(str);
        }
        
        public System.Threading.Tasks.Task<StoreServiceReference.Item1[]> GetItmesLikeAsync(string str)
        {
            return base.Channel.GetItmesLikeAsync(str);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IStoreService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IStoreService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:64512/StoreService.svc/ComputerStoreService.StoreService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return StoreServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IStoreService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return StoreServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IStoreService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IStoreService,
        }
    }
}
